type User {
  id: String!
  name: String!
  role: String!
  active: Boolean!
  customerId: String!
}

input CreateUserInput {
  name: String!
  password: String!
}

input UpdateUserInput {
  id: String!
  name: String!
}

type Query {
  users(skip: Int, take: Int): [User]!
  user(id: String!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  enableUser(userId: String): Boolean!
  disableUser(userId: String): Boolean!
  removeUser(id: String!): User
}
